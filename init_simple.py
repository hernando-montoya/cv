#!/usr/bin/env python3
"""
Inicializador simple para la base de datos CV
Usa pymongo (s√≠ncrono) en lugar de motor (as√≠ncrono)
"""

try:
    from pymongo import MongoClient
    import sys
    
    # Configuraci√≥n
    MONGO_URL = "mongodb://admin:securepassword123@localhost:27017/cv_database?authSource=admin"
    
    def init_cv_data():
        """Inicializar datos del CV en MongoDB"""
        
        print("üöÄ Conectando a MongoDB...")
        
        try:
            # Conectar a MongoDB
            client = MongoClient(MONGO_URL, serverSelectionTimeoutMS=5000)
            db = client["cv_database"]
            
            # Test connection
            client.admin.command('ping')
            print("‚úÖ Conexi√≥n a MongoDB exitosa")
            
            # Verificar si ya existen datos
            if db.content.find_one():
                print("‚ö†Ô∏è Los datos del CV ya existen, saltando inicializaci√≥n")
                return
                
            print("üìù Insertando datos del CV...")
            
            # Datos iniciales del CV
            cv_data = {
                "personalInfo": {
                    "name": "Hernando Montoya Oliveros",
                    "title": "Android Research & Development Engineer",
                    "phone": "06.23.70.58.66",
                    "email": "h.montoya2004@gmail.com",
                    "website": "hernandomontoya.net",
                    "profileImage": "https://customer-assets.emergentagent.com/job_responsive-vita/artifacts/x21fq5wh_profil.png"
                },
                "experiences": [
                    {
                        "id": "1",
                        "title": "D√©veloppeur Android",
                        "company": "Veepee",
                        "location": "Full Remote",
                        "period": "2022 ‚Äì Present",
                        "description": {
                            "en": ["Developed the Veepee/Privalia application", "Created new functionalities and integrated Jetpack Compose"],
                            "es": ["Desarroll√© la aplicaci√≥n Veepee/Privalia", "Cre√© nuevas funcionalidades e integr√© Jetpack Compose"],
                            "fr": ["D√©velopp√© l'application Veepee/Privalia", "Cr√©√© de nouvelles fonctionnalit√©s et int√©gr√© Jetpack Compose"]
                        }
                    }
                ],
                "education": [
                    {
                        "id": "1",
                        "title": "M2 Technologies d'Internet",
                        "institution": "Paris Dauphine",
                        "year": "2007",
                        "type": "degree"
                    }
                ],
                "skills": {
                    "languages": ["Kotlin", "Java"],
                    "android": ["Gradle", "Firebase", "Jetpack Compose"],
                    "tools": ["Android Studio", "Git"],
                    "methodologies": ["MVVM", "Scrum"]
                },
                "languages": [
                    {"name": "English", "level": "B2", "proficiency": 75},
                    {"name": "Spanish", "level": "Native", "proficiency": 100},
                    {"name": "French", "level": "Bilingual", "proficiency": 95}
                ],
                "aboutDescription": {
                    "en": "Experienced Android developer with 13+ years in software development.",
                    "es": "Desarrollador Android experimentado con m√°s de 13 a√±os en desarrollo de software.",
                    "fr": "D√©veloppeur Android exp√©riment√© avec plus de 13 ans en d√©veloppement logiciel."
                }
            }
            
            # Insertar datos
            result = db.content.insert_one(cv_data)
            print(f"‚úÖ Datos insertados correctamente con ID: {result.inserted_id}")
            print("üéâ ¬°CV inicializado! Tu aplicaci√≥n est√° lista para usar.")
            
        except Exception as e:
            print(f"‚ùå Error: {e}")
            print("\nüîß Soluciones:")
            print("1. Verifica que MongoDB est√© running: docker ps")
            print("2. Verifica el puerto: docker port cv_mongodb")
            print("3. Espera unos segundos m√°s y reintenta")
            sys.exit(1)
            
        finally:
            if 'client' in locals():
                client.close()
    
    if __name__ == "__main__":
        init_cv_data()
        
except ImportError:
    print("‚ùå PyMongo no est√° instalado")
    print("üîß Instala con: pip install pymongo")
    print("üì¶ O usa el script init_manual.py con motor/asyncio")