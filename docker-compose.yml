version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword}
      MONGO_INITDB_DATABASE: ${DB_NAME:-cv_database}
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - cv_network
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv_backend
    restart: unless-stopped
    environment:
      # Database
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/${DB_NAME:-cv_database}?authSource=admin
      DB_NAME: ${DB_NAME:-cv_database}
      
      # Authentication
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD_HASH: ${ADMIN_PASSWORD_HASH:-default_hash}
      JWT_SECRET: ${JWT_SECRET:-default_jwt_secret}
      
      # Application
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
    networks:
      - cv_network
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/api/', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL:-http://localhost:8001}
    container_name: cv_frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL:-http://localhost:8001}
    networks:
      - cv_network
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Data Initializer (runs once)
  data-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv_data_init
    environment:
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-securepassword}@mongodb:27017/${DB_NAME:-cv_database}?authSource=admin
      DB_NAME: ${DB_NAME:-cv_database}
    networks:
      - cv_network
    depends_on:
      mongodb:
        condition: service_healthy
    command: python init_data.py
    restart: "no"

networks:
  cv_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local