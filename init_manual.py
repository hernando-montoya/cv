import asyncio
from motor.motor_asyncio import AsyncIOMotorClient
import sys

# Conexi√≥n directa usando localhost (desde fuera de Docker)
MONGO_URL = "mongodb://admin:securepassword123@localhost:27017/cv_database?authSource=admin"

# Si no funciona localhost, intentar con la IP del contenedor
# MONGO_URL = "mongodb://admin:securepassword123@172.17.0.1:27017/cv_database?authSource=admin"

async def init_content_data():
    """Initialize content data in MongoDB"""
    
    try:
        client = AsyncIOMotorClient(MONGO_URL, serverSelectionTimeoutMS=5000)
        db = client["cv_database"]
        
        # Test connection
        await client.admin.command('ping')
        print("‚úÖ Conexi√≥n a MongoDB exitosa")
        
        # Check if content already exists
        existing_content = await db.content.find_one()
        if existing_content:
            print("‚ö†Ô∏è Los datos ya existen, saltando inicializaci√≥n")
            return
        
        # Initial content data
        initial_content = {
            "personalInfo": {
                "name": "Hernando Montoya Oliveros",
                "title": "Android Research & Development Engineer",
                "phone": "06.23.70.58.66",
                "email": "h.montoya2004@gmail.com",
                "website": "hernandomontoya.net",
                "profileImage": "https://customer-assets.emergentagent.com/job_responsive-vita/artifacts/x21fq5wh_profil.png"
            },
            "experiences": [
                {
                    "id": "1",
                    "title": "D√©veloppeur Android",
                    "company": "Veepee",
                    "location": "Full Remote",
                    "period": "2022 ‚Äì Present",
                    "period_es": "2022 ‚Äì Presente",
                    "period_fr": "2022 ‚Äì Pr√©sent",
                    "description": {
                        "en": [
                            "Developed the Veepee/Privalia application for a group present in several European countries",
                            "Created new functionalities and integrated Jetpack Compose",
                            "Corrected bugs and improved performance",
                            "Created unit and UI tests",
                            "Deployed the app to the Play Store and App Gallery",
                            "Monitored different releases"
                        ],
                        "es": [
                            "Desarroll√© la aplicaci√≥n Veepee/Privalia para un grupo presente en varios pa√≠ses europeos",
                            "Cre√© nuevas funcionalidades e integr√© Jetpack Compose",
                            "Correg√≠ errores y mejor√© el rendimiento",
                            "Cre√© pruebas unitarias y de UI",
                            "Desplegu√© la aplicaci√≥n en Play Store y App Gallery",
                            "Monitore√© diferentes versiones"
                        ],
                        "fr": [
                            "D√©velopp√© l'application Veepee/Privalia pour un groupe pr√©sent dans plusieurs pays europ√©ens",
                            "Cr√©√© de nouvelles fonctionnalit√©s et int√©gr√© Jetpack Compose",
                            "Corrig√© des bugs et am√©lior√© les performances",
                            "Cr√©√© des tests unitaires et UI",
                            "D√©ploy√© l'application sur le Play Store et App Gallery",
                            "Surveill√© diff√©rentes versions"
                        ]
                    }
                },
                {
                    "id": "2",
                    "title": "D√©veloppeur Android",
                    "company": "Betclic Group",
                    "location": "Bordeaux",
                    "period": "2017 ‚Äì 2022",
                    "description": {
                        "en": [
                            "Developed the Betclic Sport application for French and Portuguese regulation",
                            "Created new functionalities and migrated Java to Kotlin",
                            "Integrated platforms like AppsFlyer, Emarsys, Google Places, Firebase ML, and CameraX",
                            "Corrected bugs and improved performance",
                            "Created unit and UI tests",
                            "Deployed the app to the Play Store and via FTP"
                        ],
                        "es": [
                            "Desarroll√© la aplicaci√≥n Betclic Sport para la regulaci√≥n francesa y portuguesa",
                            "Cre√© nuevas funcionalidades y migr√© de Java a Kotlin",
                            "Integr√© plataformas como AppsFlyer, Emarsys, Google Places, Firebase ML y CameraX",
                            "Correg√≠ errores y mejor√© el rendimiento",
                            "Cre√© pruebas unitarias y de UI",
                            "Desplegu√© la aplicaci√≥n en Play Store y v√≠a FTP"
                        ],
                        "fr": [
                            "D√©velopp√© l'application Betclic Sport pour la r√©glementation fran√ßaise et portugaise",
                            "Cr√©√© de nouvelles fonctionnalit√©s et migr√© de Java vers Kotlin",
                            "Int√©gr√© des plateformes comme AppsFlyer, Emarsys, Google Places, Firebase ML et CameraX",
                            "Corrig√© des bugs et am√©lior√© les performances",
                            "Cr√©√© des tests unitaires et UI",
                            "D√©ploy√© l'application sur le Play Store et via FTP"
                        ]
                    }
                }
            ],
            "education": [
                {
                    "id": "1",
                    "title": "Kotlin for Android Developers",
                    "institution": "Antonio Leiva",
                    "year": "2017",
                    "type": "certification"
                },
                {
                    "id": "2",
                    "title": "M2 Technologies d'Internet pour les organisations",
                    "institution": "Paris Dauphine",
                    "year": "2007",
                    "type": "degree"
                },
                {
                    "id": "3",
                    "title": "Ing√©nieur de Syst√®mes",
                    "institution": "Universit√© de Cundinamarca, Colombie",
                    "year": "2004",
                    "type": "degree"
                }
            ],
            "skills": {
                "languages": ["Kotlin", "Java"],
                "android": ["Gradle", "Firebase", "Dagger2", "Dagger Hilt", "RxJava", "RxAndroid", "Coroutines", "Navigation", "ViewBinding", "Room", "ViewModels", "Jetpack Compose"],
                "tools": ["Android Studio", "VS Code", "Git", "Bitrise"],
                "methodologies": ["MVVM", "UML", "Scrum"]
            },
            "languages": [
                {"name": "English", "level": "B2", "proficiency": 75},
                {"name": "Spanish", "level": "Native", "proficiency": 100},
                {"name": "French", "level": "Bilingual", "proficiency": 95}
            ],
            "aboutDescription": {
                "en": "Experienced Android developer with 13+ years in software development, specializing in modern Android development with Kotlin, Jetpack Compose, and cutting-edge mobile technologies.",
                "es": "Desarrollador Android experimentado con m√°s de 13 a√±os en desarrollo de software, especializado en desarrollo Android moderno con Kotlin, Jetpack Compose y tecnolog√≠as m√≥viles de vanguardia.",
                "fr": "D√©veloppeur Android exp√©riment√© avec plus de 13 ans en d√©veloppement logiciel, sp√©cialis√© dans le d√©veloppement Android moderne avec Kotlin, Jetpack Compose et les technologies mobiles de pointe."
            }
        }
        
        # Insert initial content
        result = await db.content.insert_one(initial_content)
        print(f"‚úÖ Datos inicializados correctamente con ID: {result.inserted_id}")
        
    except Exception as e:
        print(f"‚ùå Error durante la inicializaci√≥n: {e}")
        print("\nüîß Soluciones posibles:")
        print("1. Verifica que MongoDB est√© corriendo: docker ps")
        print("2. Verifica el puerto MongoDB: docker port cv_mongodb")
        print("3. Prueba con IP del servidor en lugar de localhost")
        sys.exit(1)
        
    finally:
        client.close()

async def main():
    """Main initialization function"""
    print("üöÄ Iniciando configuraci√≥n de datos del CV...")
    await init_content_data()
    print("‚úÖ ¬°Inicializaci√≥n completa! Tu CV est√° listo.")

if __name__ == "__main__":
    asyncio.run(main())