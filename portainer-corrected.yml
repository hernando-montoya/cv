# Stack CV App - Configuración Corregida de URLs
# Frontend: Puerto 8006 | Backend: Puerto 8007

version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: cv_database
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cv_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.no-healthcheck
    container_name: cv_backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:securepassword123@mongodb:27017/cv_database?authSource=admin
      DB_NAME: cv_database
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD_HASH: b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890
      JWT_SECRET: production_jwt_secret_change_this
      CORS_ORIGINS: "*"
    ports:
      - "8007:8001"
    networks:
      - cv_network
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
      args:
        # Para comunicación interna Docker
        REACT_APP_BACKEND_URL: http://backend:8001
    container_name: cv_frontend
    restart: unless-stopped
    environment:
      # Para comunicación interna Docker
      REACT_APP_BACKEND_URL: http://backend:8001
    ports:
      - "8006:3000"
    networks:
      - cv_network
    depends_on:
      - backend

  # Configurador automático de URLs
  config-fixer:
    build:
      context: ./backend
      dockerfile: Dockerfile.no-healthcheck
    container_name: cv_config_fixer
    volumes:
      - ./frontend:/frontend_src
    networks:
      - cv_network
    depends_on:
      - backend
      - frontend
    command: >
      sh -c "
        echo '🔧 Configurador automático iniciado' &&
        sleep 30 &&
        echo '🧪 Probando URLs del backend...' &&
        
        # Probar backend interno
        if curl -f http://backend:8001/health >/dev/null 2>&1; then
          echo '✅ Backend interno funciona: http://backend:8001'
          export BACKEND_URL='http://backend:8001'
        elif curl -f http://cv_backend:8001/health >/dev/null 2>&1; then
          echo '✅ Backend por nombre funciona: http://cv_backend:8001'
          export BACKEND_URL='http://cv_backend:8001'
        else
          echo '❌ Backend interno no accesible'
          export BACKEND_URL='http://backend:8001'
        fi &&
        
        echo '📝 Configurando frontend...' &&
        echo \"REACT_APP_BACKEND_URL=\$BACKEND_URL\" > /frontend_src/.env.docker &&
        echo \"WDS_SOCKET_PORT=443\" >> /frontend_src/.env.docker &&
        echo '✅ Configuración completa' &&
        echo '💡 El frontend debería usar:' \$BACKEND_URL
      "
    restart: "no"

networks:
  cv_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

# 📋 INSTRUCCIONES:
# 1. Deploy este stack
# 2. El contenedor config-fixer configurará automáticamente las URLs
# 3. Si hay problemas, ve al Admin Panel → pestaña "Debug"
# 4. Usa la pestaña "Import" para cargar datos