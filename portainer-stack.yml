# Stack para Portainer - CV Application
# Compatible con Nginx Proxy Manager (NPM)

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-securepassword123}
      MONGO_INITDB_DATABASE: ${DB_NAME:-cv_database}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cv_internal
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API
  backend:
    image: cv_backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv_backend
    restart: unless-stopped
    environment:
      # Database
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-securepassword123}@mongodb:27017/${DB_NAME:-cv_database}?authSource=admin
      DB_NAME: ${DB_NAME:-cv_database}
      
      # Authentication - ¡CAMBIAR EN PRODUCCIÓN!
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD_HASH: ${ADMIN_PASSWORD_HASH:-b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890}
      JWT_SECRET: ${JWT_SECRET:-production_jwt_secret_very_long_key_change_this_in_production}
      
      # Application
      PYTHONPATH: /app
    expose:
      - "8001"
    networks:
      - cv_internal
      - npm_proxy  # Red para NPM
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/api/', timeout=10)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend
  frontend:
    image: cv_frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: ${BACKEND_URL:-https://api.yourdomain.com}
    container_name: cv_frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: ${BACKEND_URL:-https://api.yourdomain.com}
    expose:
      - "3000"
    networks:
      - cv_internal
      - npm_proxy  # Red para NPM
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Data Initializer (runs once)
  data-init:
    image: cv_backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cv_data_init
    environment:
      MONGO_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-securepassword123}@mongodb:27017/${DB_NAME:-cv_database}?authSource=admin
      DB_NAME: ${DB_NAME:-cv_database}
    networks:
      - cv_internal
    depends_on:
      mongodb:
        condition: service_healthy
    command: python init_data.py
    restart: "no"

networks:
  cv_internal:
    driver: bridge
    internal: true  # Red interna para comunicación entre servicios
  npm_proxy:
    external: true  # Red externa gestionada por NPM

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local