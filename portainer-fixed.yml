# Stack CV App - Con Puerto MongoDB Expuesto para InicializaciÃ³n Manual
# Frontend: Puerto 8006 | Backend: Puerto 8007 | MongoDB: Puerto 27017

version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: cv_database
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"  # ðŸ‘ˆ PUERTO EXPUESTO PARA INICIALIZACIÃ“N MANUAL
    networks:
      - cv_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.portainer
    container_name: cv_backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:securepassword123@mongodb:27017/cv_database?authSource=admin
      DB_NAME: cv_database
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD_HASH: b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890
      JWT_SECRET: production_jwt_secret_change_this
      CORS_ORIGINS: "*"
    ports:
      - "8007:8001"
    networks:
      - cv_network
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
      args:
        REACT_APP_BACKEND_URL: http://backend:8001
    container_name: cv_frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: http://backend:8001
    ports:
      - "8006:3000"
    networks:
      - cv_network
    depends_on:
      - backend

networks:
  cv_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local

# ðŸ“‹ PARA INICIALIZAR DATOS:
# 1. Deploy este stack en Portainer
# 2. Espera que todos los contenedores estÃ©n "running"
# 3. Desde tu servidor, ejecuta: python3 init_manual.py
# 4. Una vez inicializado, puedes remover el puerto 27017 por seguridad