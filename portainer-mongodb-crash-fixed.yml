# Stack CV App - Soluci칩n para MongoDB Crasheando
# Configuraci칩n robusta con manejo de permisos y recursos

version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    restart: unless-stopped
    user: "999:999"  # Usuario mongodb est치ndar
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: cv_database
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cv_network
    command: 
      - mongod
      - --auth
      - --bind_ip_all
      - --quiet
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: echo 'db.ping().ok' | mongosh localhost:27017/test --quiet || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.no-healthcheck
    container_name: cv_backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:securepassword123@mongodb:27017/cv_database?authSource=admin
      DB_NAME: cv_database
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD_HASH: b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890
      JWT_SECRET: production_jwt_secret_change_this
      CORS_ORIGINS: "*"
    ports:
      - "8007:8001"
    networks:
      - cv_network
    depends_on:
      mongodb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
      args:
        REACT_APP_BACKEND_URL: http://192.168.1.18:8007
    container_name: cv_frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: http://192.168.1.18:8007
    ports:
      - "8006:3000"
    networks:
      - cv_network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

networks:
  cv_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/cv-app/mongodb-data
  mongodb_config:
    driver: local
    driver_opts:
      type: none
      o: bind  
      device: /opt/cv-app/mongodb-config

# 游댢 MEJORAS APLICADAS PARA EVITAR CRASHES:
# 1. Usuario espec칤fico para MongoDB (999:999)
# 2. L칤mites de recursos CPU/memoria
# 3. Health check robusto con tiempo de espera
# 4. Vol칰menes con bind mounts espec칤ficos
# 5. Comando MongoDB expl칤cito con par치metros de estabilidad
# 6. Dependencias con condition: service_healthy

# 游늶 PREPARACI칍N REQUERIDA EN EL SERVIDOR:
# sudo mkdir -p /opt/cv-app/{mongodb-data,mongodb-config}
# sudo chown -R 999:999 /opt/cv-app/
# sudo chmod -R 755 /opt/cv-app/