# Stack CV App - Dos Contenedores (Backend + MongoDB)
# Frontend servido por el backend en puerto 8006
# Más simple que un contenedor combinado

version: '3.8'

services:
  mongodb:
    image: mongo:5.0
    container_name: cv_mongodb
    hostname: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: securepassword123
      MONGO_INITDB_DATABASE: cv_database
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - cv_network

  # Backend que sirve también el frontend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.no-healthcheck
    container_name: cv_backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:securepassword123@mongodb:27017/cv_database?authSource=admin
      DB_NAME: cv_database
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD_HASH: b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890
      JWT_SECRET: production_jwt_secret_change_this
      CORS_ORIGINS: "*"
    ports:
      - "8006:8001"
    networks:
      - cv_network
    depends_on:
      - mongodb
    # Esperar antes de arrancar
    command: >
      sh -c "
        echo '⏳ Esperando MongoDB (45 segundos)...' &&
        sleep 45 &&
        echo '🚀 Iniciando backend...' &&
        uvicorn server:app --host 0.0.0.0 --port 8001
      "

  # Build del frontend por separado
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
      args:
        REACT_APP_BACKEND_URL: ""
    container_name: cv_frontend_builder
    volumes:
      - frontend_build:/app/build
    command: >
      sh -c "
        echo '📦 Copiando build del frontend...' &&
        cp -r /usr/share/nginx/html/* /app/build/ &&
        echo '✅ Frontend build copiado'
      "
    restart: "no"

networks:
  cv_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  frontend_build:
    driver: local

# 📋 NOTAS:
# - Backend sirve el frontend desde archivos estáticos
# - Solo un puerto: 8006
# - Sin health checks problemáticos
# - Espera explícita para MongoDB