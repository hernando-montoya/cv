# Dockerfile para aplicación CV - Un solo contenedor
# Frontend React + Backend FastAPI + JSON Storage

FROM node:18-alpine AS frontend-build

# Build del frontend
WORKDIR /app/frontend
COPY frontend/package.json frontend/yarn.lock ./
RUN yarn install --frozen-lockfile

COPY frontend/ ./
RUN yarn build

# Imagen final con Python
FROM python:3.11-slim

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Crear directorio de la aplicación
WORKDIR /app

# Copiar y instalar dependencias del backend
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código del backend
COPY backend/ ./

# Copiar build del frontend desde la etapa anterior
COPY --from=frontend-build /app/frontend/build ./frontend_build

# Crear directorio para datos JSON
RUN mkdir -p /app/data && chmod 755 /app/data

# Variables de entorno por defecto
ENV CORS_ORIGINS="*"
ENV ADMIN_USERNAME="admin"
ENV ADMIN_PASSWORD_HASH="b8d6c1a9b2e5d7f3:a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890"
ENV JWT_SECRET="production_jwt_secret_change_this"

# Exponer puerto 8000 (estándar FastAPI)
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Comando para iniciar la aplicación
CMD ["uvicorn", "server:app", "--host", "0.0.0.0", "--port", "8000"]